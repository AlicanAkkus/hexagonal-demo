sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectKey", "craftbaseio"
        property "sonar.projectName", "hexagonal-demo"
        property "sonar.organization", "craftbaseio"
        property "sonar.login", "9c228c4da2fc38e2b7581806d6dac2bc76269f4c"
        property "sonar.moduleKey", "$project.group:$project.name"
        property "sonar.core.codeCoveragePlugin", "jacoco"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.groovy.coveragePlugin", "jacoco"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.jacoco.reportPaths", subprojects.collect { subProject ->
            subProject.tasks.jacocoTestReport.executionData
        }
        property "sonar.groovy.binaries", subprojects.collect { subProject ->
            "${subProject.buildDir.name}/classes"
        }
        property "sonar.groovy.jacoco.reportPath", subprojects.collect { subProject ->
            subProject.tasks.jacocoTestReport.executionData
        }
        property "sonar.groovy.jacoco.itReportPath", subprojects.collect { subProject ->
            subProject.tasks.jacocoTestReport.executionData
        }
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.coverage.jacoco.xmlReportPaths", subprojects.collect { subProject ->
            subProject.tasks.jacocoTestReport.reports.xml.destination
        }
        property "sonar.scm.disabled", "true"
        property "sonar.jacoco.reportPath", ""

        project.afterEvaluate {
            if (project.ext.type == 'groovy') {
                property "sonar.sources", "src/main/groovy,src/test/groovy"
            } else {
                property "sonar.sources", "src/main/java,src/test/java"
            }
        }
    }
}
